<ResourceDictionary x:Class="XunlanEditor.Dictionaries.ControlTemplatesDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XunlanEditor.Dictionaries"
                    xmlns:utl="clr-namespace:XunlanEditor.Utilities.Controls">

    <Style TargetType="{x:Type TextBlock}"
           x:Key="TextBlockStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}"
           x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,2"/>
    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown"
                     Handler="OnTextBox_KeyDown"/>
    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="TextBoxStyle_Rename"
           BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBoxRename_KeyDown"/>
        <EventSetter Event="LostFocus" Handler="OnTextBoxRename_LostFocus"/>
    </Style>
           

    <Style TargetType="{x:Type ListBoxItem}"
           x:Key="listBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Editor.Selected.BackgroundBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Editor.Selected.Background}"
                                                         Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Editor.Window.GrayBrush3}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource listBoxItemStyle}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Editor.Window.GrayBrush1}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
                        </Trigger>

                        <Trigger Property="Selector.IsSelectionActive" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource Editor.FontBrush}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.Gray4}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.Gray3}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.Gray5}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.Gray1}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <ControlTemplate.Resources>

                        <LinearGradientBrush x:Key="Button.Disabled.BackgroundBrush"
                                                 StartPoint="0,0"
                                                 EndPoint="0,1">
                            <GradientStop Color="{DynamicResource Editor.Window.Gray3}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.Gray2}" Offset="1"/>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="Button.Disabled.BorderBrush"
                                                 StartPoint="0,0"
                                                 EndPoint="0,1">
                            <GradientStop Color="{DynamicResource Editor.Window.Gray4}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.Gray0}" Offset="1"/>
                        </LinearGradientBrush>

                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true"
                                    CornerRadius="3"/>
                        <Border x:Name="borderSelected"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="3"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"/>
                        <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Editor.FontBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.BackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.BorderBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="simpleButton">
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="contentPresenter"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Window}"
           x:Key="XunlanWindowStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush0}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0"
                              CaptionHeight="20"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}"
                                                 Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <DockPanel VerticalAlignment="Top"
                                       LastChildFill="False">

                                <DockPanel.Resources>
                                    
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>

                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource simpleButton}">
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                    
                                </DockPanel.Resources>
                                
                                <TextBlock DockPanel.Dock="Left"
                                           VerticalAlignment="Center"
                                           Margin="8,2"
                                           FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>
                                
                                <Button Name="buttonClose"
                                        Height="20"
                                        Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid HorizontalAlignment="Center">
                                            <Path Data="M1,1.5 L8,8.5"/>
                                            <Path Data="M1,8.5 L8,1.5"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                                <Button Name="buttonRestore"
                                        Height="20"
                                        Click="OnMaximized_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}"
                                                   StrokeThickness="1"
                                                   Width="10"
                                                   Height="8"/>
                                    </Button.Content>
                                </Button>

                                <Button Name="buttonMinimize"
                                        Height="20"
                                        Click="OnMinimized_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}"
                                                   StrokeThickness="1"
                                                   Width="10"
                                                   Height="1"
                                                   Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>

                            </DockPanel>
                        </Grid>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Window}"
           x:Key="XunlanDiagStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush0}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0"
                              CaptionHeight="20"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}"
                                                 Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <DockPanel VerticalAlignment="Top"
                                       LastChildFill="False">

                                <DockPanel.Resources>

                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>

                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource simpleButton}">
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>

                                </DockPanel.Resources>

                                <TextBlock DockPanel.Dock="Left"
                                           VerticalAlignment="Center"
                                           Margin="8,2"
                                           FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <Button Name="buttonClose"
                                        Height="20"
                                        Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid HorizontalAlignment="Center">
                                            <Path Data="M1,1.5 L8,8.5"/>
                                            <Path Data="M1,8.5 L8,1.5"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                            </DockPanel>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type utl:NumberBox}"
           x:Key="{x:Type utl:NumberBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:NumberBox}">
                    
                    <Grid>
                        
                        <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                   HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBox x:Name="PART_textBox"
                                 BorderThickness="0"
                                 Padding="0"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, UpdateSourceTrigger=Explicit}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_Rename}"
                                 HorizontalContentAlignment="Center"
                                 HorizontalAlignment="Center"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        
                        <DataTrigger Binding="{Binding ElementName=PART_textBox, Path=Visibility}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed_values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type utl:ScalarBox}"
           x:Key="{x:Type utl:ScalarBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:ScalarBox}">
                    
                    <Border x:Name="border"
                            SnapsToDevicePixels="True"
                            Margin="0,2,0,3"
                            Padding="5,2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <Grid x:Name="grid"
                              MinWidth="50">

                            <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                   HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="PART_textBox"
                                 BorderThickness="0"
                                 Padding="0"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, UpdateSourceTrigger=Explicit}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_Rename}"
                                 HorizontalContentAlignment="Center"
                                 HorizontalAlignment="Center"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=PART_textBox, Path=Visibility}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed_values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type utl:VectorBox}"
           x:Key="{x:Type utl:VectorBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:VectorBox}">
                    
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type utl:NumberBox}"
                               BasedOn="{StaticResource {x:Type utl:NumberBox}}">
                            <Setter Property="MinWidth" Value="50"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
                            <Setter Property="Multiplier" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Multiplier}"/>
                        </Style>
                    </ControlTemplate.Resources>

                    <Border x:Name="border"
                            SnapsToDevicePixels="True"
                            Margin="0,2,0,3"
                            Padding="5,2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <Grid x:Name="grid">
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="column0"/>
                                <ColumnDefinition x:Name="column1"/>
                                <ColumnDefinition x:Name="column2"/>
                                <ColumnDefinition x:Name="column3"/>
                            </Grid.ColumnDefinitions>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="row0"/>
                                <RowDefinition x:Name="row1"/>
                                <RowDefinition x:Name="row2"/>
                                <RowDefinition x:Name="row3"/>
                            </Grid.RowDefinitions>

                            <utl:NumberBox x:Name="numberBoxX"
                                           Foreground="{DynamicResource Editor.RedBrush}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=X}"
                                           ToolTip="X component"/>

                            <utl:NumberBox x:Name="numberBoxY"
                                           Foreground="{DynamicResource Editor.GreenBrush}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Y}"
                                           ToolTip="Y component"/>

                            <utl:NumberBox x:Name="numberBoxZ"
                                           Foreground="{DynamicResource Editor.BlueBrush}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Z}"
                                           ToolTip="Z component"/>

                            <utl:NumberBox x:Name="numberBoxW"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=W}"
                                           ToolTip="W component"
                                           Visibility="Collapsed"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Orientation}" Value="Horizontal">
                            <Setter Property="Grid.Column" TargetName="numberBoxX" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="numberBoxY" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="numberBoxZ" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="numberBoxW" Value="3"/>
                            <Setter Property="Height" TargetName="row1" Value="auto"/>
                            <Setter Property="Height" TargetName="row2" Value="auto"/>
                            <Setter Property="Height" TargetName="row3" Value="auto"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Orientation}" Value="Vertical">
                            <Setter Property="Grid.Row" TargetName="numberBoxX" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="numberBoxY" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="numberBoxZ" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="numberBoxW" Value="3"/>
                            <Setter Property="Width" TargetName="column1" Value="auto"/>
                            <Setter Property="Width" TargetName="column2" Value="auto"/>
                            <Setter Property="Width" TargetName="column3" Value="auto"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VectorType}" Value="Vector2">
                            <Setter Property="Visibility" TargetName="numberBoxZ" Value="Collapsed"/>
                            <Setter Property="Height" TargetName="row2" Value="auto"/>
                            <Setter Property="Height" TargetName="row3" Value="auto"/>
                            <Setter Property="Width" TargetName="column2" Value="auto"/>
                            <Setter Property="Width" TargetName="column3" Value="auto"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VectorType}" Value="Vector3">
                            <Setter Property="Height" TargetName="row3" Value="auto"/>
                            <Setter Property="Width" TargetName="column3" Value="auto"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VectorType}" Value="Vector4">
                            <Setter Property="Visibility" TargetName="numberBoxW" Value="Visible"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>